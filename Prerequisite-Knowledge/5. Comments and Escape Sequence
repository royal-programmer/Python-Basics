
Comments:- Comments are user friendly quotes that make the user/reader easier to understand the codes. Comments can be
           written in two ways -
    1. '#' method: By putting hash symbol '#' in front of the line.
        For Eg: >>> # This is a comment
                >>> print("Hello World") # Line that are after hash symbol is a comment

         NOTE:- Hash Comment is generally used for single line comment or comment beside codes.

    2. 3-single or double quotes method:- This method is when comments are written in between three single('') or
                double("") quotes.
        For Eg: >>>"""
                   This is a comment: line 1
                   This is a comment: line 2
                   This is a comment: line 3
                   This is a comment: line 4
                   .
                   .
                   .
                   """

        Note:- Quoted comments are generally use in multiline comments, like description of the code.


NOTE: Comments are not a part of a program i.e. with giving or not giving any comments it does not effect the
              performance of the code.



Escape Sequence:-



1. \newline    Backslash and newline ignored
    Eg: >>> print("line1 \
        line2 \
        line3")
    Result: line1 line2 line3

2. \\           Backslash (\)
    Eg: >>> print("\\")
    Result: \

3. \'           Single quote (')
    Eg: >>> print('\'')
    Result: '

4. \"           Double quote (")
    Eg: >>> print("\"")
    Result: "

5. \a	        ASCII Bell (BEL)
    Eg: >>> print("\a")
    Result: 

6. \b	        ASCII Backspace (BS)
    Eg: >>>
    Result: Hello World!

7. \f	        ASCII Formfeed (FF)
    Eg: >>> print("Hello \f World!")
    Result: Hello  World!

8. \n	        ASCII Linefeed (LF)
    Eg: >>> print("Hello \n World!")
    Result: Hello
             World!

9. \r	        ASCII Carriage Return (CR)
    Eg: >>> print("Hello \r World!")
    Result: World!

10. \t	        ASCII Horizontal Tab (TAB)
    Eg: >>> print("Hello \t World!")
    Result: Hello 	 World!

11. \v	        ASCII Vertical Tab (VT)
    Eg: >>> print("Hello \t World!")
    Result: Hello 	 World!

12. \ooo	    Character with octal value ooo
    Eg: >>> print("\110\145\154\154\157\40\127\157\162\154\144\41")
    Result: Hello World!

13. \xhh	    Character with hex value hh
    Eg: >>> print("\x48\x65\x6c\x6c\x6f\x20\x57\x6f\x72\x6c\x64\x21")
    Result: Hello World!

Some escape sequences are only recognized in string literals. These are:

14. \N{name}	Character named name in the Unicode database
15. \uxxxx      Character with 16-bit hex value xxxx. Exactly four hexadecimal digits are required.
16. \Uxxxxxxxx	Character with 32-bit hex value xxxxxxxx. Exactly eight hexadecimal digits are required.
